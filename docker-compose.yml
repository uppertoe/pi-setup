version: "3.8"

services:
  # Caddy (Reverse Proxy with Let's Encrypt)
  caddy:
    image: caddy:latest
    container_name: caddy
    env_file:
      - .env
      - ./hashes/.env.caddy  # Use the generated hashed passwords
    networks:
      - caddy-net
    restart: unless-stopped
    ports:
      - "80:80"         # HTTP
      - "443:443"       # HTTPS
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config

  # Pi-hole
  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    env_file:
      - .env  # Use plain text password
    dns:
      - 1.1.1.1
      - 8.8.8.8
    environment:
      TZ: "${TZ}"
      WEBPASSWORD: "${PIHOLE_WEBPASSWORD}"  # Plain text password
      FTLCONF_LOCAL_IPV4: "${PIHOLE_LOCAL_IPV4}"
    networks:
      - caddy-net
      - wg-net
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "853:853/tcp"
      - "8081:80/tcp"
    volumes:
      - './pihole/etc-pihole:/etc/pihole'
      - './pihole/etc-dnsmasq.d:/etc/dnsmasq.d'
      - './pihole/etc-lighttpd/external.conf:/etc/lighttpd/external.conf'
    restart: unless-stopped
    depends_on:
      - caddy

  # WireGuard (VPN Service)
  wireguard:
    container_name: wireguard
    image: lscr.io/linuxserver/wireguard:latest
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ}
      - SERVERURL=${WIREGUARD_SERVERURL} # Public IP or domain
      - SERVERPORT=51820
      - PEERS=${WIREGUARD_PEERS}  # Number of client configs to generate
      - PEERDNS=${PIHOLE_LOCAL_IPV4} # Pi-hole DNS server IP
      - INTERNAL_SUBNET=10.0.0.0/24
    volumes:
      - ./wireguard/config:/config
      - /lib/modules:/lib/modules
    networks:
      - wg-net
    ports:
      - "51820:51820/udp"
    restart: unless-stopped

  # Home Assistant
  homeassistant:
    container_name: homeassistant
    image: "ghcr.io/home-assistant/home-assistant:stable"
    env_file:
      - .env  # Use plain text password
    environment:
      TZ: "${TZ}"
      USERNAME: "${HOMEASSISTANT_USERNAME}"
      PASSWORD: "${HOMEASSISTANT_PASSWORD}"  # Plain text password
    networks:
      - caddy-net
    restart: unless-stopped
    volumes:
      - "./homeassistant/etc-homeassistant:/config"
      - "/etc/localtime:/etc/localtime:ro"
    depends_on:
      - caddy

  # Calibre-Web
  calibre:
    container_name: calibre
    image: linuxserver/calibre:latest
    env_file:
      - .env  # Use plain text password
    environment:
      PUID: "${PUID}"
      PGID: "${PGID}"
      TZ: "${TZ}"
      CALIBRE_USERNAME: "${CALIBRE_USERNAME}"
      CALIBRE_PASSWORD: "${CALIBRE_PASSWORD}"  # Plain text password
    networks:
      - caddy-net
    restart: unless-stopped
    ports:
      - "8082:8080"
    volumes:
      - './calibre/config:/config'
      - './calibre/library:/books'
    depends_on:
      - caddy

  # Static Site
  static_site:
    container_name: static_site
    image: nginx:alpine
    env_file:
      - .env  # Use plain text password
    environment:
      STATIC_SITE_SUBDOMAIN: "${STATIC_SITE_SUBDOMAIN}"
      STATIC_SITE_USERNAME: "${STATIC_SITE_USERNAME}"
      STATIC_SITE_PASSWORD: "${STATIC_SITE_PASSWORD}"  # Plain text password
    networks:
      - caddy-net
    restart: unless-stopped
    ports:
      - "8083:80"
    volumes:
      - './static_site/html:/usr/share/nginx/html:ro'
      #- './static_site/nginx.conf:/etc/nginx/nginx.conf:ro'
    depends_on:
      - caddy

networks:
  caddy-net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.19.0.0/16
  wg-net:
    driver: bridge
    ipam:
      config:
        - subnet: 10.0.0.0/24

volumes:
  caddy_data:
    external: false
  caddy_config:
    external: false
